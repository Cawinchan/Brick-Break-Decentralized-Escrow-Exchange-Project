{
  "id": "61fd4ff5219cbaae281afed7255f8f57",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.13",
  "solcLongVersion": "0.8.13+commit.abaa5c0e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/MultiSigContract.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\n//Dispute contract\n\npragma solidity 0.8.13; \n\n/// @title Multisignature wallet - Allows multiple parties to agree on transactions before execution.\n/// @author Cawin Chan - <cawin.chan@gmail.com>  \n// Reference @aurthor Stefan George - <stefan.george@consensys.net> Gnosis multisigwallet\ncontract MultiSigWallet {\n    /*\n     *  Events\n     */\n    event Approve(uint256 ApprovalCount);\n    event Execution(uint256 time);\n    event Deposit(address sender, uint value);\n\n    /*\n     *  Storage\n     */\n    mapping (address => bool) public isArbitrator;\n    mapping (address => bool) public isApprover;\n    address[] public arbitrators;\n    address payable public disputer;\n    address payable public disputee;\n    uint256 public required;\n    uint256 public ApprovalCount;\n    uint256 public time_created;\n\n    enum State{\n         \n        // Following are the States\n        // 0: await_deposit - Waiting for EscrowContract to send funds\n        // 1: await_approval - Waiting arbitrators to approve contract \n        // 2: dispute_succesful - Disputer application was succesful\n        // 3: dispute_failed - Disputer application was not succesful\n        await_deposit, await_approval, dispute_succesful, dispute_failed\n    }\n  \n    // Declaring the object of the enumerator\n    State public state;\n\n    /*\n     *  Modifiers\n     */\n\n    // modifier to set the expected state to execute the function\n    modifier instate(State expected_state){\n          \n        require(state == expected_state);\n        _;\n    }\n\n\n    modifier arbitratorExists(address arbitrator) {\n        require(isArbitrator[arbitrator]);\n        _;\n    }\n\n    modifier neverApproved(address arbitrator) {\n        require(!isApprover[arbitrator]);\n        _;\n    }\n\n    modifier withinADay(){\n        require(((block.timestamp - time_created)/ 60 / 60 / 24) <= 1);\n        _;\n    }\n\n    modifier AfterADay(){\n        require(((block.timestamp - time_created)/ 60 / 60 / 24) > 1);\n        _;\n    }\n\n    // Fallback function allows to deposit ether.\n    fallback() external payable{\n    }\n\n    receive() external payable {\n    }\n\n    // Defining a constructor\n    constructor(address payable _disputer, // Person lauching the dispute\n                address payable _disputee, // Person lauching the dispute against\n                address[] memory _arbitrators, \n                uint _required) payable{\n\n    require(_required != 0\n            && _arbitrators.length != 0);\n\n    for (uint i=0; i<_arbitrators.length; i++) {\n        require(!isArbitrator[_arbitrators[i]]);\n        isArbitrator[_arbitrators[i]] = true;\n    }\n\n    disputer = _disputer;\n    disputee = _disputee;\n    arbitrators = _arbitrators;\n    required = _required;\n    state = State.await_deposit;\n    time_created = block.timestamp;\n    }\n    \n    function depositFunds() public payable\n            instate(State.await_deposit)\n            {\n        state = State.await_approval;\n        (bool sent,) = address(this).call{value: msg.value}(\"\");\n        require(sent, \"Failed to send funds to multisig\");\n    }\n\n    /// @dev Allows an arbitrator to approve the dispute within a day\n    function ApproveDispute()\n        public\n        arbitratorExists(msg.sender)\n        neverApproved(msg.sender)\n        withinADay()\n        instate(State.await_approval)\n    {\n        isApprover[msg.sender] = true;\n        ApprovalCount += 1;\n        emit Approve(ApprovalCount);\n        if (ApprovalCount >= required){\n            // Smart contract sends its balance to the disputer \n            state = State.dispute_succesful;\n            (bool sent,) = disputer.call{value: address(this).balance}(\"\");\n            require(sent, \"Failed to send funds to disputer\");\n            emit Execution(block.timestamp);\n        }\n    }\n\n    /// @dev Allows an arbitrator to approve the dispute within a day\n    function getResult()\n        public\n        AfterADay()\n    {\n        if (ApprovalCount < required){\n            state = State.dispute_failed;\n            (bool sent,) = disputee.call{value: address(this).balance}(\"\");\n            require(sent, \"Failed to send funds to disputee\");\n        }\n        if (ApprovalCount >= required){\n            state = State.dispute_succesful;\n            (bool sent,) = disputer.call{value: address(this).balance}(\"\");\n            require(sent, \"Failed to send funds to disputer\");\n        }\n    }\n\n\n    function getConfirmationCount() view public returns (uint){\n        return ApprovalCount;\n    }\n   \n    /// @dev Get time left before dispute expires in mins\n    function getTimeLeft() \n        view public \n        withinADay() \n        returns (uint){\n\n        return (24*60) - ((block.timestamp - time_created) / 60);\n    }\n\n    /// @dev Get time left before dispute expires in mins\n    function getBalance() \n        view public \n        withinADay() \n        returns (uint){\n            \n        return address(this).balance;\n    }\n\n    function getState() view public returns (State){\n        return state;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/MultiSigContract.sol": {
        "MultiSigWallet": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_disputer",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "_disputee",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "_arbitrators",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "_required",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "ApprovalCount",
                  "type": "uint256"
                }
              ],
              "name": "Approve",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "Execution",
              "type": "event"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "inputs": [],
              "name": "ApprovalCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ApproveDispute",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "arbitrators",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "depositFunds",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "disputee",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "disputer",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getConfirmationCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getResult",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getState",
              "outputs": [
                {
                  "internalType": "enum MultiSigWallet.State",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTimeLeft",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isApprover",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isArbitrator",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "required",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum MultiSigWallet.State",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "time_created",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_213": {
                  "entryPoint": null,
                  "id": 213,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 521,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_payablet_address_payablet_array$_t_address_$dyn_memory_ptrt_uint256_fromMemory": {
                  "entryPoint": 539,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "increment_t_uint256": {
                  "entryPoint": 823,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x21": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 801,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 499,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_address_payable": {
                  "entryPoint": 474,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2429:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "67:86:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "131:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "140:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "143:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "133:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "133:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "133:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "90:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "101:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "116:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "121:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "112:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "112:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "125:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "108:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "108:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "97:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "97:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "87:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "87:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "80:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "77:70:1"
                            }
                          ]
                        },
                        "name": "validator_revert_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "56:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "190:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "207:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "214:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "219:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "210:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "210:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "200:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "200:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "200:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "247:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "250:4:1",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "240:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "240:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "240:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "271:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "274:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "264:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "264:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "264:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "158:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "350:86:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "360:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "375:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "369:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "369:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "360:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "424:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:32:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "391:39:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "391:39:1"
                            }
                          ]
                        },
                        "name": "abi_decode_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "329:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "340:5:1",
                            "type": ""
                          }
                        ],
                        "src": "290:146:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "614:1312:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "661:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "670:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "673:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "663:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "663:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "663:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "635:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "644:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "631:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "631:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "656:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "627:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "627:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "624:53:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "686:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "705:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "699:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "699:16:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "690:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "757:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "724:32:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "724:39:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "724:39:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "772:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "782:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "772:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "796:12:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "806:2:1",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "800:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "817:40:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "842:9:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "853:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "838:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "838:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "832:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "832:25:1"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "821:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "899:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "866:32:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "866:41:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "866:41:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "916:17:1",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "926:7:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "916:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "942:39:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "966:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "977:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "962:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "962:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "956:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "956:25:1"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "946:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "990:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1008:2:1",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1012:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1004:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1004:10:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1016:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1000:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1000:18:1"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "994:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1045:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1054:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1057:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1047:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1047:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1047:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1033:6:1"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1041:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1030:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1030:14:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1027:34:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1070:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1084:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1095:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1080:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1080:22:1"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "1074:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1150:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1159:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1162:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1152:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1152:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1152:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1129:2:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1133:4:1",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1125:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1125:13:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1140:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1121:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1121:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1114:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1114:35:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1111:55:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1175:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1191:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1185:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1185:9:1"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "1179:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1217:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1219:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1219:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1219:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1209:2:1"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1213:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1206:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1206:10:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1203:36:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1248:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1262:1:1",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1265:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1258:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1258:10:1"
                              },
                              "variables": [
                                {
                                  "name": "_5",
                                  "nodeType": "YulTypedName",
                                  "src": "1252:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1277:23:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1297:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1291:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1291:9:1"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1281:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1309:56:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1331:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_5",
                                            "nodeType": "YulIdentifier",
                                            "src": "1347:2:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1351:2:1",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1343:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1343:11:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1360:2:1",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "1356:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1356:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1339:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1339:25:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1327:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1327:38:1"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1313:10:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1424:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1426:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1426:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1426:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1383:10:1"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1395:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1380:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1380:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1403:10:1"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1415:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1400:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1400:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1377:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1377:46:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1374:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1462:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1466:10:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1455:22:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1455:22:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1486:17:1",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1497:6:1"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "1490:3:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1519:6:1"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1527:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1512:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1512:18:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1512:18:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1539:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1550:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1558:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1546:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1546:15:1"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1539:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1570:34:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1592:2:1"
                                      },
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "1596:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1588:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1588:11:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1601:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1584:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1584:20:1"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "1574:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1636:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1645:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1648:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1638:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1638:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1638:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1619:6:1"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1627:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1616:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1616:19:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1613:39:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1661:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1676:2:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1680:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1672:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1672:11:1"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "1665:3:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1748:103:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1769:3:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "1804:3:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_address_fromMemory",
                                            "nodeType": "YulIdentifier",
                                            "src": "1774:29:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1774:34:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1762:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1762:47:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1762:47:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1822:19:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1833:3:1"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1838:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1829:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1829:12:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "1822:3:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "1703:3:1"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1708:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1700:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1700:15:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1716:23:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1718:19:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "1729:3:1"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1734:2:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1725:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1725:12:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1718:3:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1696:3:1",
                                "statements": []
                              },
                              "src": "1692:159:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1860:16:1",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1870:6:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1860:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1885:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1905:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1916:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1901:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1901:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1895:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1895:25:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1885:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payablet_address_payablet_array$_t_address_$dyn_memory_ptrt_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "556:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "567:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "579:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "587:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "595:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "603:6:1",
                            "type": ""
                          }
                        ],
                        "src": "441:1485:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1963:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1980:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1987:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1992:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1983:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1983:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1973:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1973:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1973:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2020:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2023:4:1",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2013:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2013:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2013:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2044:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2047:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2037:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2037:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2037:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1931:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2110:185:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2149:111:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2170:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2177:3:1",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2182:10:1",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "2173:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2173:20:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2163:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2163:31:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2163:31:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2214:1:1",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2217:4:1",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2207:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2207:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2207:15:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2242:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2245:4:1",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2235:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2235:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2235:15:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2126:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2137:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2133:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2133:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "2123:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2123:17:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2120:140:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2269:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2280:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2287:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2276:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2276:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "2269:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2092:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "2102:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2063:232:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2332:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2349:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2356:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2361:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2352:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2352:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2342:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2342:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2342:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2389:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2392:4:1",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2382:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2382:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2382:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2413:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2416:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2406:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2406:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2406:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2300:127:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address_payable(value)\n    }\n    function abi_decode_tuple_t_address_payablet_address_payablet_array$_t_address_$dyn_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := mload(add(headStart, _1))\n        validator_revert_address_payable(value_1)\n        value1 := value_1\n        let offset := mload(add(headStart, 64))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _1)\n        }\n        value2 := memPtr\n        value3 := mload(add(headStart, 96))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405260405162000ccf38038062000ccf83398101604081905262000026916200021b565b8015801590620000365750815115155b6200004057600080fd5b60005b8251811015620000f85760008084838151811062000065576200006562000321565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156200009757600080fd5b6001600080858481518110620000b157620000b162000321565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000ef8162000337565b91505062000043565b50600380546001600160a01b038087166001600160a01b031992831617909255600480549286169290911691909117905581516200013e90600290602085019062000159565b5060055550506008805460ff1916905550426007556200035f565b828054828255906000526020600020908101928215620001b1579160200282015b82811115620001b157825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200017a565b50620001bf929150620001c3565b5090565b5b80821115620001bf5760008155600101620001c4565b6001600160a01b0381168114620001f057600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b80516200021681620001da565b919050565b600080600080608085870312156200023257600080fd5b84516200023f81620001da565b809450506020808601516200025481620001da565b60408701519094506001600160401b03808211156200027257600080fd5b818801915088601f8301126200028757600080fd5b8151818111156200029c576200029c620001f3565b8060051b604051601f19603f83011681018181108582111715620002c457620002c4620001f3565b60405291825284820192508381018501918b831115620002e357600080fd5b938501935b828510156200030c57620002fc8562000209565b84529385019392850192620002e8565b60609a909a0151989b979a5050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200035857634e487b7160e01b600052601160045260246000fd5b5060010190565b610960806200036f6000396000f3fe6080604052600436106100eb5760003560e01c80639f6bd2a911610084578063dc8452cd11610056578063dc8452cd1461028a578063de292789146102a0578063e2c41dbc146102b5578063fc2ac367146102bd57005b80639f6bd2a91461020b578063a6430cc01461023b578063c19d93fb1461025b578063c7e284b81461027557005b80636ac56103116100bd5780636ac56103146101685780636d218e48146101a05780636eec3515146101e057806391f78e4c146101f657005b806312065fe0146100f45780631865c57d1461011c57806343efa9ec1461013d578063639d7a071461015257005b366100f257005b005b34801561010057600080fd5b506101096102dd565b6040519081526020015b60405180910390f35b34801561012857600080fd5b5060085460ff165b6040516101139190610852565b34801561014957600080fd5b506100f2610322565b34801561015e57600080fd5b5061010960075481565b34801561017457600080fd5b50600354610188906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b3480156101ac57600080fd5b506101d06101bb36600461087a565b60016020526000908152604090205460ff1681565b6040519015158152602001610113565b3480156101ec57600080fd5b5061010960065481565b34801561020257600080fd5b50600654610109565b34801561021757600080fd5b506101d061022636600461087a565b60006020819052908152604090205460ff1681565b34801561024757600080fd5b506101886102563660046108aa565b610520565b34801561026757600080fd5b506008546101309060ff1681565b34801561028157600080fd5b5061010961054a565b34801561029657600080fd5b5061010960055481565b3480156102ac57600080fd5b506100f26105b5565b6100f261076f565b3480156102c957600080fd5b50600454610188906001600160a01b031681565b600060016018603c80600754426102f491906108d9565b6102fe91906108f0565b61030891906108f0565b61031291906108f0565b111561031d57600080fd5b504790565b3360008181526020819052604090205460ff1661033e57600080fd5b3360008181526001602052604090205460ff161561035b57600080fd5b60016018603c806007544261037091906108d9565b61037a91906108f0565b61038491906108f0565b61038e91906108f0565b111561039957600080fd5b60018060085460ff1660038111156103b3576103b361083c565b146103bd57600080fd5b3360009081526001602081905260408220805460ff19168217905560068054919290916103eb908490610912565b90915550506006546040519081527f77b92c0722e5bbe8d1413b7fbec6093bc4dc966a65832498dc8c2c67d9a937cc9060200160405180910390a16005546006541061051b576008805460ff191660021790556003546040516000916001600160a01b03169047908381818185875af1925050503d806000811461048b576040519150601f19603f3d011682016040523d82523d6000602084013e610490565b606091505b50509050806104e65760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e642066756e647320746f20646973707574657260448201526064015b60405180910390fd5b6040514281527f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed759060200160405180910390a1505b505050565b6002818154811061053057600080fd5b6000918252602090912001546001600160a01b0316905081565b600060016018603c806007544261056191906108d9565b61056b91906108f0565b61057591906108f0565b61057f91906108f0565b111561058a57600080fd5b603c6007544261059a91906108d9565b6105a491906108f0565b6105b0906105a06108d9565b905090565b60016018603c80600754426105ca91906108d9565b6105d491906108f0565b6105de91906108f0565b6105e891906108f0565b116105f257600080fd5b60055460065410156106b0576008805460ff191660031790556004546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610658576040519150601f19603f3d011682016040523d82523d6000602084013e61065d565b606091505b50509050806106ae5760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e642066756e647320746f20646973707574656560448201526064016104dd565b505b6005546006541061076d576008805460ff191660021790556003546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610715576040519150601f19603f3d011682016040523d82523d6000602084013e61071a565b606091505b505090508061076b5760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e642066756e647320746f20646973707574657260448201526064016104dd565b505b565b60008060085460ff1660038111156107895761078961083c565b1461079357600080fd5b6008805460ff19166001179055604051600090309034908381818185875af1925050503d80600081146107e2576040519150601f19603f3d011682016040523d82523d6000602084013e6107e7565b606091505b50509050806108385760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e642066756e647320746f206d756c746973696760448201526064016104dd565b5050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061087457634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561088c57600080fd5b81356001600160a01b03811681146108a357600080fd5b9392505050565b6000602082840312156108bc57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156108eb576108eb6108c3565b500390565b60008261090d57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610925576109256108c3565b50019056fea2646970667358221220c41168ee950f0873fccdd06700976b60952ecbd0fb976b1490ef4a44ff097e4864736f6c634300080d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0xCCF CODESIZE SUB DUP1 PUSH3 0xCCF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x26 SWAP2 PUSH3 0x21B JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH3 0x36 JUMPI POP DUP2 MLOAD ISZERO ISZERO JUMPDEST PUSH3 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0xF8 JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x65 JUMPI PUSH3 0x65 PUSH3 0x321 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0xB1 JUMPI PUSH3 0xB1 PUSH3 0x321 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0xEF DUP2 PUSH3 0x337 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x43 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP2 MLOAD PUSH3 0x13E SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x159 JUMP JUMPDEST POP PUSH1 0x5 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 SSTORE PUSH3 0x35F JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x1B1 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1B1 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x17A JUMP JUMPDEST POP PUSH3 0x1BF SWAP3 SWAP2 POP PUSH3 0x1C3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1BF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH3 0x216 DUP2 PUSH3 0x1DA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x23F DUP2 PUSH3 0x1DA JUMP JUMPDEST DUP1 SWAP5 POP POP PUSH1 0x20 DUP1 DUP7 ADD MLOAD PUSH3 0x254 DUP2 PUSH3 0x1DA JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x29C JUMPI PUSH3 0x29C PUSH3 0x1F3 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x2C4 JUMPI PUSH3 0x2C4 PUSH3 0x1F3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP12 DUP4 GT ISZERO PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x30C JUMPI PUSH3 0x2FC DUP6 PUSH3 0x209 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x60 SWAP11 SWAP1 SWAP11 ADD MLOAD SWAP9 SWAP12 SWAP8 SWAP11 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x358 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x960 DUP1 PUSH3 0x36F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F6BD2A9 GT PUSH2 0x84 JUMPI DUP1 PUSH4 0xDC8452CD GT PUSH2 0x56 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xDE292789 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xE2C41DBC EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xFC2AC367 EQ PUSH2 0x2BD JUMPI STOP JUMPDEST DUP1 PUSH4 0x9F6BD2A9 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xA6430CC0 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xC7E284B8 EQ PUSH2 0x275 JUMPI STOP JUMPDEST DUP1 PUSH4 0x6AC56103 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x6AC56103 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x6D218E48 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x6EEC3515 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x91F78E4C EQ PUSH2 0x1F6 JUMPI STOP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1865C57D EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x43EFA9EC EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x639D7A07 EQ PUSH2 0x152 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0xF2 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x852 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x322 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x188 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x130 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x54A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x76F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x188 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST GT ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST GT ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B3 PUSH2 0x83C JUMP JUMPDEST EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x3EB SWAP1 DUP5 SWAP1 PUSH2 0x912 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x77B92C0722E5BBE8D1413B7FBEC6093BC4DC966A65832498DC8C2C67D9A937CC SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD LT PUSH2 0x51B JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x48B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x490 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642066756E647320746F206469737075746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x33E13ECB54C3076D8E8BB8C2881800A4D972B792045FFAE98FDF46DF365FED75 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST GT ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x5B0 SWAP1 PUSH2 0x5A0 PUSH2 0x8D9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST GT PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x65D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642066756E647320746F206469737075746565 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DD JUMP JUMPDEST POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD LT PUSH2 0x76D JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x71A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x76B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642066756E647320746F206469737075746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DD JUMP JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x789 JUMPI PUSH2 0x789 PUSH2 0x83C JUMP JUMPDEST EQ PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 ADDRESS SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642066756E647320746F206D756C7469736967 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x874 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x8EB JUMPI PUSH2 0x8EB PUSH2 0x8C3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x90D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x925 JUMPI PUSH2 0x925 PUSH2 0x8C3 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 GT PUSH9 0xEE950F0873FCCDD067 STOP SWAP8 PUSH12 0x60952ECBD0FB976B1490EF4A DIFFICULTY SELFDESTRUCT MULMOD PUSH31 0x4864736F6C634300080D003300000000000000000000000000000000000000 ",
              "sourceMap": "321:4705:0:-:0;;;2169:647;;;;;;;;;;;;;;;;;;:::i;:::-;2423:14;;;;;:54;;-1:-1:-1;2453:19:0;;:24;;2423:54;2415:63;;;;;;2490:6;2485:145;2502:12;:19;2500:1;:21;2485:145;;;2547:12;:29;2560:12;2573:1;2560:15;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2547:29:0;;;;;;;;;;;-1:-1:-1;2547:29:0;;;;2546:30;2538:39;;;;;;2619:4;2587:12;:29;2600:12;2613:1;2600:15;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2587:29:0;;;;;;;;;;;-1:-1:-1;2587:29:0;:36;;-1:-1:-1;;2587:36:0;;;;;;;;;;2523:3;;;;:::i;:::-;;;;2485:145;;;-1:-1:-1;2636:8:0;:20;;-1:-1:-1;;;;;2636:20:0;;;-1:-1:-1;;;;;;2636:20:0;;;;;;;2662:8;:20;;;;;;;;;;;;;;;2688:26;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;2720:8:0;:20;-1:-1:-1;;2746:5:0;:27;;-1:-1:-1;;2746:27:0;;;-1:-1:-1;2794:15:0;2779:12;:30;321:4705;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;321:4705:0;-1:-1:-1;;;;;321:4705:0;;;;;;;;;;;-1:-1:-1;321:4705:0;;;;;;;-1:-1:-1;321:4705:0;;;-1:-1:-1;321:4705:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:139:1;-1:-1:-1;;;;;97:31:1;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:127::-;219:10;214:3;210:20;207:1;200:31;250:4;247:1;240:15;274:4;271:1;264:15;290:146;369:13;;391:39;369:13;391:39;:::i;:::-;290:146;;;:::o;441:1485::-;579:6;587;595;603;656:3;644:9;635:7;631:23;627:33;624:53;;;673:1;670;663:12;624:53;705:9;699:16;724:39;757:5;724:39;:::i;:::-;782:5;772:15;;;806:2;853;842:9;838:18;832:25;866:41;899:7;866:41;:::i;:::-;977:2;962:18;;956:25;926:7;;-1:-1:-1;;;;;;1030:14:1;;;1027:34;;;1057:1;1054;1047:12;1027:34;1095:6;1084:9;1080:22;1070:32;;1140:7;1133:4;1129:2;1125:13;1121:27;1111:55;;1162:1;1159;1152:12;1111:55;1191:2;1185:9;1213:2;1209;1206:10;1203:36;;;1219:18;;:::i;:::-;1265:2;1262:1;1258:10;1297:2;1291:9;1360:2;1356:7;1351:2;1347;1343:11;1339:25;1331:6;1327:38;1415:6;1403:10;1400:22;1395:2;1383:10;1380:18;1377:46;1374:72;;;1426:18;;:::i;:::-;1462:2;1455:22;1512:18;;;1546:15;;;;-1:-1:-1;1588:11:1;;;1584:20;;;1616:19;;;1613:39;;;1648:1;1645;1638:12;1613:39;1672:11;;;;1692:159;1708:6;1703:3;1700:15;1692:159;;;1774:34;1804:3;1774:34;:::i;:::-;1762:47;;1725:12;;;;1829;;;;1692:159;;;1916:2;1901:18;;;;1895:25;441:1485;;;;-1:-1:-1;;;;;;;;441:1485:1:o;1931:127::-;1992:10;1987:3;1983:20;1980:1;1973:31;2023:4;2020:1;2013:15;2047:4;2044:1;2037:15;2063:232;2102:3;2123:17;;;2120:140;;2182:10;2177:3;2173:20;2170:1;2163:31;2217:4;2214:1;2207:15;2245:4;2242:1;2235:15;2120:140;-1:-1:-1;2287:1:1;2276:13;;2063:232::o;2300:127::-;321:4705:0;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@ApprovalCount_35": {
                  "entryPoint": null,
                  "id": 35,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@ApproveDispute_311": {
                  "entryPoint": 802,
                  "id": 311,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_129": {
                  "entryPoint": null,
                  "id": 129,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_133": {
                  "entryPoint": null,
                  "id": 133,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@arbitrators_27": {
                  "entryPoint": 1312,
                  "id": 27,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@depositFunds_244": {
                  "entryPoint": 1903,
                  "id": 244,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@disputee_31": {
                  "entryPoint": null,
                  "id": 31,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@disputer_29": {
                  "entryPoint": null,
                  "id": 29,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getBalance_420": {
                  "entryPoint": 733,
                  "id": 420,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getConfirmationCount_382": {
                  "entryPoint": null,
                  "id": 382,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getResult_374": {
                  "entryPoint": 1461,
                  "id": 374,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getState_429": {
                  "entryPoint": null,
                  "id": 429,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getTimeLeft_405": {
                  "entryPoint": 1354,
                  "id": 405,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@isApprover_24": {
                  "entryPoint": null,
                  "id": 24,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isArbitrator_20": {
                  "entryPoint": null,
                  "id": 20,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@required_33": {
                  "entryPoint": null,
                  "id": 33,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@state_45": {
                  "entryPoint": null,
                  "id": 45,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@time_created_37": {
                  "entryPoint": null,
                  "id": 37,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 2170,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 2218,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_enum$_State_$42__to_t_uint8__fromStack_reversed": {
                  "entryPoint": 2130,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9f0adef860f89c80da5e66142276c667d6a13060042fed0fb512dab5f7f3c880__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ddddf8a34fb1efb61f3370d7bea5761ea024a49988f115833451546a00257398__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f9a4049831e7feb4b8733f78255f4f47711fbca27857a0e14685e4f40da1074d__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 2322,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 2288,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 2265,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 2243,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 2108,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3973:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:1",
                            "type": ""
                          }
                        ],
                        "src": "14:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "228:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "245:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "238:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "238:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "238:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "342:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "345:4:1",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "335:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "335:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "335:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "366:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "369:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "359:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "359:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "359:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "196:184:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "492:286:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "502:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "514:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "525:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "510:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "510:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "502:4:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "570:168:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "591:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "594:77:1",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "584:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "584:88:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "584:88:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "692:1:1",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "695:4:1",
                                          "type": "",
                                          "value": "0x21"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "685:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "685:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "685:15:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "720:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "723:4:1",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "713:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "713:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "713:15:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "550:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "558:1:1",
                                        "type": "",
                                        "value": "4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "547:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "547:13:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "540:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "540:21:1"
                              },
                              "nodeType": "YulIf",
                              "src": "537:201:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "754:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "765:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "747:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "747:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "747:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_enum$_State_$42__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "461:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "472:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "483:4:1",
                            "type": ""
                          }
                        ],
                        "src": "385:393:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "900:125:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "910:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "922:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "933:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "918:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "918:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "910:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "952:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "967:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "975:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "963:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "963:55:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "945:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "945:74:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "945:74:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "869:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "880:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "891:4:1",
                            "type": ""
                          }
                        ],
                        "src": "783:242:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1100:239:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1146:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1155:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1158:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1148:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1148:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1148:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1121:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1130:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1117:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1117:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1142:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1113:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1113:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1110:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1171:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1197:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1184:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1184:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1175:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1293:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1302:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1305:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1295:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1295:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1295:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1229:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1240:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1247:42:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1236:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1236:54:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1226:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1226:65:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1219:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1219:73:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1216:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1318:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1328:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1318:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1066:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1077:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1089:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1030:309:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1439:92:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1449:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1461:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1472:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1457:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1457:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1449:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1491:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1516:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1509:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1509:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1502:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1502:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1484:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1484:41:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1484:41:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1408:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1419:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1430:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1344:187:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1606:110:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1652:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1661:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1664:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1654:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1654:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1654:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1627:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1636:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1623:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1623:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1648:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1619:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1619:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1616:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1677:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1700:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1687:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1687:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1677:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1572:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1583:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1595:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1536:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1822:125:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1832:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1844:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1855:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1840:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1840:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1832:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1874:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1889:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1897:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1885:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1885:55:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1867:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1867:74:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1867:74:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1791:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1802:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1813:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1721:226:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1984:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2001:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2004:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1994:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1994:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1994:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2098:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2101:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2091:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2091:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2091:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2122:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2125:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2115:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2115:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2115:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1952:184:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2190:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2212:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2214:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2214:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2214:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2206:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2209:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2203:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2203:8:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2200:34:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2243:17:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2255:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2258:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2251:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2251:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "2243:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "2172:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "2175:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "2181:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2141:125:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2317:228:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2348:168:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2369:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2372:77:1",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2362:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2362:88:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2362:88:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2470:1:1",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2473:4:1",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2463:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2463:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2463:15:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2498:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2501:4:1",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2491:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2491:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2491:15:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2337:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2330:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2330:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2327:189:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2525:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2534:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2537:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2530:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2530:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "2525:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "2302:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "2305:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "2311:1:1",
                            "type": ""
                          }
                        ],
                        "src": "2271:274:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2598:80:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2625:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2627:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2627:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2627:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2614:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "2621:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2617:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2617:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2611:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2611:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2608:39:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2656:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2667:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2670:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2663:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2663:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "2656:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "2581:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "2584:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "2590:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2550:128:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2874:14:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2876:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2883:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2876:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2858:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2866:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2683:205:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3067:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3084:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3095:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3077:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3077:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3077:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3118:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3129:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3114:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3114:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3134:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3107:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3107:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3107:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3157:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3168:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3153:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3153:18:1"
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e642066756e647320746f206469737075746572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3173:34:1",
                                    "type": "",
                                    "value": "Failed to send funds to disputer"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3146:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3146:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3146:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3217:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3229:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3240:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3225:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3225:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3217:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9f0adef860f89c80da5e66142276c667d6a13060042fed0fb512dab5f7f3c880__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3044:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3058:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2893:356:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3428:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3445:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3456:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3438:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3438:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3438:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3479:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3490:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3475:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3475:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3495:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3468:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3468:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3468:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3518:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3529:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3514:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3514:18:1"
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e642066756e647320746f206469737075746565",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3534:34:1",
                                    "type": "",
                                    "value": "Failed to send funds to disputee"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3507:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3507:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3507:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3578:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3590:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3601:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3586:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3586:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3578:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ddddf8a34fb1efb61f3370d7bea5761ea024a49988f115833451546a00257398__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3405:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3419:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3254:356:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3789:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3806:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3817:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3799:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3799:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3799:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3840:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3851:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3836:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3836:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3856:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3829:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3829:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3829:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3879:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3890:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3875:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3875:18:1"
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e642066756e647320746f206d756c7469736967",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3895:34:1",
                                    "type": "",
                                    "value": "Failed to send funds to multisig"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3868:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3868:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3868:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3939:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3951:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3962:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3947:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3947:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3939:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f9a4049831e7feb4b8733f78255f4f47711fbca27857a0e14685e4f40da1074d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3766:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3780:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3615:356:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_State_$42__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 4))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_9f0adef860f89c80da5e66142276c667d6a13060042fed0fb512dab5f7f3c880__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Failed to send funds to disputer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ddddf8a34fb1efb61f3370d7bea5761ea024a49988f115833451546a00257398__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Failed to send funds to disputee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f9a4049831e7feb4b8733f78255f4f47711fbca27857a0e14685e4f40da1074d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Failed to send funds to multisig\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100eb5760003560e01c80639f6bd2a911610084578063dc8452cd11610056578063dc8452cd1461028a578063de292789146102a0578063e2c41dbc146102b5578063fc2ac367146102bd57005b80639f6bd2a91461020b578063a6430cc01461023b578063c19d93fb1461025b578063c7e284b81461027557005b80636ac56103116100bd5780636ac56103146101685780636d218e48146101a05780636eec3515146101e057806391f78e4c146101f657005b806312065fe0146100f45780631865c57d1461011c57806343efa9ec1461013d578063639d7a071461015257005b366100f257005b005b34801561010057600080fd5b506101096102dd565b6040519081526020015b60405180910390f35b34801561012857600080fd5b5060085460ff165b6040516101139190610852565b34801561014957600080fd5b506100f2610322565b34801561015e57600080fd5b5061010960075481565b34801561017457600080fd5b50600354610188906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b3480156101ac57600080fd5b506101d06101bb36600461087a565b60016020526000908152604090205460ff1681565b6040519015158152602001610113565b3480156101ec57600080fd5b5061010960065481565b34801561020257600080fd5b50600654610109565b34801561021757600080fd5b506101d061022636600461087a565b60006020819052908152604090205460ff1681565b34801561024757600080fd5b506101886102563660046108aa565b610520565b34801561026757600080fd5b506008546101309060ff1681565b34801561028157600080fd5b5061010961054a565b34801561029657600080fd5b5061010960055481565b3480156102ac57600080fd5b506100f26105b5565b6100f261076f565b3480156102c957600080fd5b50600454610188906001600160a01b031681565b600060016018603c80600754426102f491906108d9565b6102fe91906108f0565b61030891906108f0565b61031291906108f0565b111561031d57600080fd5b504790565b3360008181526020819052604090205460ff1661033e57600080fd5b3360008181526001602052604090205460ff161561035b57600080fd5b60016018603c806007544261037091906108d9565b61037a91906108f0565b61038491906108f0565b61038e91906108f0565b111561039957600080fd5b60018060085460ff1660038111156103b3576103b361083c565b146103bd57600080fd5b3360009081526001602081905260408220805460ff19168217905560068054919290916103eb908490610912565b90915550506006546040519081527f77b92c0722e5bbe8d1413b7fbec6093bc4dc966a65832498dc8c2c67d9a937cc9060200160405180910390a16005546006541061051b576008805460ff191660021790556003546040516000916001600160a01b03169047908381818185875af1925050503d806000811461048b576040519150601f19603f3d011682016040523d82523d6000602084013e610490565b606091505b50509050806104e65760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e642066756e647320746f20646973707574657260448201526064015b60405180910390fd5b6040514281527f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed759060200160405180910390a1505b505050565b6002818154811061053057600080fd5b6000918252602090912001546001600160a01b0316905081565b600060016018603c806007544261056191906108d9565b61056b91906108f0565b61057591906108f0565b61057f91906108f0565b111561058a57600080fd5b603c6007544261059a91906108d9565b6105a491906108f0565b6105b0906105a06108d9565b905090565b60016018603c80600754426105ca91906108d9565b6105d491906108f0565b6105de91906108f0565b6105e891906108f0565b116105f257600080fd5b60055460065410156106b0576008805460ff191660031790556004546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610658576040519150601f19603f3d011682016040523d82523d6000602084013e61065d565b606091505b50509050806106ae5760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e642066756e647320746f20646973707574656560448201526064016104dd565b505b6005546006541061076d576008805460ff191660021790556003546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610715576040519150601f19603f3d011682016040523d82523d6000602084013e61071a565b606091505b505090508061076b5760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e642066756e647320746f20646973707574657260448201526064016104dd565b505b565b60008060085460ff1660038111156107895761078961083c565b1461079357600080fd5b6008805460ff19166001179055604051600090309034908381818185875af1925050503d80600081146107e2576040519150601f19603f3d011682016040523d82523d6000602084013e6107e7565b606091505b50509050806108385760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f2073656e642066756e647320746f206d756c746973696760448201526064016104dd565b5050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061087457634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561088c57600080fd5b81356001600160a01b03811681146108a357600080fd5b9392505050565b6000602082840312156108bc57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156108eb576108eb6108c3565b500390565b60008261090d57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610925576109256108c3565b50019056fea2646970667358221220c41168ee950f0873fccdd06700976b60952ecbd0fb976b1490ef4a44ff097e4864736f6c634300080d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F6BD2A9 GT PUSH2 0x84 JUMPI DUP1 PUSH4 0xDC8452CD GT PUSH2 0x56 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xDE292789 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xE2C41DBC EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xFC2AC367 EQ PUSH2 0x2BD JUMPI STOP JUMPDEST DUP1 PUSH4 0x9F6BD2A9 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xA6430CC0 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xC7E284B8 EQ PUSH2 0x275 JUMPI STOP JUMPDEST DUP1 PUSH4 0x6AC56103 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x6AC56103 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x6D218E48 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x6EEC3515 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x91F78E4C EQ PUSH2 0x1F6 JUMPI STOP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1865C57D EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x43EFA9EC EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x639D7A07 EQ PUSH2 0x152 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0xF2 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x852 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x322 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x188 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x130 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x54A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x76F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x188 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST GT ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST GT ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B3 PUSH2 0x83C JUMP JUMPDEST EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x3EB SWAP1 DUP5 SWAP1 PUSH2 0x912 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x77B92C0722E5BBE8D1413B7FBEC6093BC4DC966A65832498DC8C2C67D9A937CC SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD LT PUSH2 0x51B JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x48B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x490 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642066756E647320746F206469737075746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x33E13ECB54C3076D8E8BB8C2881800A4D972B792045FFAE98FDF46DF365FED75 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST GT ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x5B0 SWAP1 PUSH2 0x5A0 PUSH2 0x8D9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x8F0 JUMP JUMPDEST GT PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x65D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642066756E647320746F206469737075746565 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DD JUMP JUMPDEST POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD LT PUSH2 0x76D JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x71A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x76B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642066756E647320746F206469737075746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DD JUMP JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x789 JUMPI PUSH2 0x789 PUSH2 0x83C JUMP JUMPDEST EQ PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 ADDRESS SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642066756E647320746F206D756C7469736967 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x874 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x8EB JUMPI PUSH2 0x8EB PUSH2 0x8C3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x90D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x925 JUMPI PUSH2 0x925 PUSH2 0x8C3 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 GT PUSH9 0xEE950F0873FCCDD067 STOP SWAP8 PUSH12 0x60952ECBD0FB976B1490EF4A DIFFICULTY SELFDESTRUCT MULMOD PUSH31 0x4864736F6C634300080D003300000000000000000000000000000000000000 ",
              "sourceMap": "321:4705:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4796:146;;;;;;;;;;;;;:::i;:::-;;;160:25:1;;;148:2;133:18;4796:146:0;;;;;;;;4948:76;;;;;;;;;;-1:-1:-1;5012:5:0;;;;4948:76;;;;;;;:::i;3163:630::-;;;;;;;;;;;;;:::i;808:27::-;;;;;;;;;;;;;;;;671:31;;;;;;;;;;-1:-1:-1;671:31:0;;;;-1:-1:-1;;;;;671:31:0;;;;;;-1:-1:-1;;;;;963:55:1;;;945:74;;933:2;918:18;671:31:0;783:242:1;588:43:0;;;;;;;;;;-1:-1:-1;588:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1509:14:1;;1502:22;1484:41;;1472:2;1457:18;588:43:0;1344:187:1;774:28:0;;;;;;;;;;;;;;;;4407:95;;;;;;;;;;-1:-1:-1;4482:13:0;;4407:95;;537:45;;;;;;;;;;-1:-1:-1;537:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;637:28;;;;;;;;;;-1:-1:-1;637:28:0;;;;;:::i;:::-;;:::i;1314:18::-;;;;;;;;;;-1:-1:-1;1314:18:0;;;;;;;;4569:163;;;;;;;;;;;;;:::i;745:23::-;;;;;;;;;;;;;;;;3869:531;;;;;;;;;;;;;:::i;2826:261::-;;;:::i;708:31::-;;;;;;;;;;-1:-1:-1;708:31:0;;;;-1:-1:-1;;;;;708:31:0;;;4796:146;4879:4;1868:1;1861:2;1856;1851;1836:12;;1818:15;:30;;;;:::i;:::-;1817:36;;;;:::i;:::-;:41;;;;:::i;:::-;:46;;;;:::i;:::-;1816:53;;1808:62;;;;;;-1:-1:-1;4914:21:0::1;4796:146:::0;:::o;3163:630::-;3229:10;1619:12;:24;;;;;;;;;;;;;1611:33;;;;;;3263:10:::1;1730:22;::::0;;;:10:::1;:22;::::0;;;;;::::1;;1729:23;1721:32;;;::::0;::::1;;1868:1:::2;1861:2;1856;1851::::0;1836:12:::2;;1818:15;:30;;;;:::i;:::-;1817:36;;;;:::i;:::-;:41;;;;:::i;:::-;:46;;;;:::i;:::-;1816:53;;1808:62;;;::::0;::::2;;3312:20:::3;::::0;1506:5:::3;::::0;::::3;;:23;::::0;::::3;;;;;;:::i;:::-;;1498:32;;;::::0;::::3;;3359:10:::4;3348:22;::::0;;;3373:4:::4;3348:22;::::0;;;;;;:29;;-1:-1:-1;;3348:29:0::4;::::0;::::4;::::0;;3387:13:::4;:18:::0;;3373:4;;3387:13;;:18:::4;::::0;3373:4;;3387:18:::4;:::i;:::-;::::0;;;-1:-1:-1;;3428:13:0::4;::::0;3420:22:::4;::::0;160:25:1;;;3420:22:0::4;::::0;148:2:1;133:18;3420:22:0::4;;;;;;;3473:8;;3456:13;;:25;3452:335;;3561:5;:31:::0;;-1:-1:-1;;3561:31:0::4;3569:23;3561:31;::::0;;3621:8:::4;::::0;:47:::4;::::0;-1:-1:-1;;;;;;;3621:8:0::4;::::0;3642:21:::4;::::0;-1:-1:-1;3621:47:0;-1:-1:-1;3621:47:0;3642:21;3621:8;:47:::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3606:62;;;3690:4;3682:49;;;::::0;-1:-1:-1;;;3682:49:0;;3095:2:1;3682:49:0::4;::::0;::::4;3077:21:1::0;;;3114:18;;;3107:30;3173:34;3153:18;;;3146:62;3225:18;;3682:49:0::4;;;;;;;;;3750:26;::::0;3760:15:::4;160:25:1::0;;3750:26:0::4;::::0;148:2:1;133:18;3750:26:0::4;;;;;;;3482:305;3452:335;1880:1:::3;1654::::1;3163:630:::0;:::o;637:28::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;637:28:0;;-1:-1:-1;637:28:0;:::o;4569:163::-;4653:4;1868:1;1861:2;1856;1851;1836:12;;1818:15;:30;;;;:::i;:::-;1817:36;;;;:::i;:::-;:41;;;;:::i;:::-;:46;;;;:::i;:::-;1816:53;;1808:62;;;;;;4722:2:::1;4706:12;;4688:15;:30;;;;:::i;:::-;4687:37;;;;:::i;:::-;4676:49;::::0;4677:5:::1;4676:49;:::i;:::-;4669:56;;4569:163:::0;:::o;3869:531::-;1983:1;1977:2;1972;1967;1952:12;;1934:15;:30;;;;:::i;:::-;1933:36;;;;:::i;:::-;:41;;;;:::i;:::-;:46;;;;:::i;:::-;1932:52;1924:61;;;;;;3959:8:::1;;3943:13;;:24;3939:221;;;3982:5;:28:::0;;-1:-1:-1;;3982:28:0::1;3990:20;3982:28;::::0;;4039:8:::1;::::0;:47:::1;::::0;-1:-1:-1;;;;;;;4039:8:0::1;::::0;4060:21:::1;::::0;-1:-1:-1;4039:47:0;-1:-1:-1;4039:47:0;4060:21;4039:8;:47:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4024:62;;;4108:4;4100:49;;;::::0;-1:-1:-1;;;4100:49:0;;3456:2:1;4100:49:0::1;::::0;::::1;3438:21:1::0;;;3475:18;;;3468:30;3534:34;3514:18;;;3507:62;3586:18;;4100:49:0::1;3254:356:1::0;4100:49:0::1;3968:192;3939:221;4190:8;;4173:13;;:25;4169:225;;4213:5;:31:::0;;-1:-1:-1;;4213:31:0::1;4221:23;4213:31;::::0;;4273:8:::1;::::0;:47:::1;::::0;-1:-1:-1;;;;;;;4273:8:0::1;::::0;4294:21:::1;::::0;-1:-1:-1;4273:47:0;-1:-1:-1;4273:47:0;4294:21;4273:8;:47:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4258:62;;;4342:4;4334:49;;;::::0;-1:-1:-1;;;4334:49:0;;3095:2:1;4334:49:0::1;::::0;::::1;3077:21:1::0;;;3114:18;;;3107:30;3173:34;3153:18;;;3146:62;3225:18;;4334:49:0::1;2893:356:1::0;4334:49:0::1;4199:195;4169:225;3869:531::o:0;2826:261::-;2885:19;;1506:5;;;;:23;;;;;;;;:::i;:::-;;1498:32;;;;;;2928:5:::1;:28:::0;;-1:-1:-1;;2928:28:0::1;2936:20;2928:28;::::0;;2981:40:::1;::::0;-1:-1:-1;;2989:4:0::1;::::0;3007:9:::1;::::0;-1:-1:-1;2981:40:0;-1:-1:-1;2981:40:0;3007:9;2989:4;2981:40:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2966:55;;;3039:4;3031:49;;;::::0;-1:-1:-1;;;3031:49:0;;3817:2:1;3031:49:0::1;::::0;::::1;3799:21:1::0;;;3836:18;;;3829:30;3895:34;3875:18;;;3868:62;3947:18;;3031:49:0::1;3615:356:1::0;3031:49:0::1;2918:169;2826:261:::0;:::o;196:184:1:-;-1:-1:-1;;;245:1:1;238:88;345:4;342:1;335:15;369:4;366:1;359:15;385:393;525:2;510:18;;558:1;547:13;;537:201;;-1:-1:-1;;;591:1:1;584:88;695:4;692:1;685:15;723:4;720:1;713:15;537:201;747:25;;;385:393;:::o;1030:309::-;1089:6;1142:2;1130:9;1121:7;1117:23;1113:32;1110:52;;;1158:1;1155;1148:12;1110:52;1197:9;1184:23;-1:-1:-1;;;;;1240:5:1;1236:54;1229:5;1226:65;1216:93;;1305:1;1302;1295:12;1216:93;1328:5;1030:309;-1:-1:-1;;;1030:309:1:o;1536:180::-;1595:6;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;-1:-1:-1;1687:23:1;;1536:180;-1:-1:-1;1536:180:1:o;1952:184::-;-1:-1:-1;;;2001:1:1;1994:88;2101:4;2098:1;2091:15;2125:4;2122:1;2115:15;2141:125;2181:4;2209:1;2206;2203:8;2200:34;;;2214:18;;:::i;:::-;-1:-1:-1;2251:9:1;;2141:125::o;2271:274::-;2311:1;2337;2327:189;;-1:-1:-1;;;2369:1:1;2362:88;2473:4;2470:1;2463:15;2501:4;2498:1;2491:15;2327:189;-1:-1:-1;2530:9:1;;2271:274::o;2550:128::-;2590:3;2621:1;2617:6;2614:1;2611:13;2608:39;;;2627:18;;:::i;:::-;-1:-1:-1;2663:9:1;;2550:128::o"
            },
            "methodIdentifiers": {
              "ApprovalCount()": "6eec3515",
              "ApproveDispute()": "43efa9ec",
              "arbitrators(uint256)": "a6430cc0",
              "depositFunds()": "e2c41dbc",
              "disputee()": "fc2ac367",
              "disputer()": "6ac56103",
              "getBalance()": "12065fe0",
              "getConfirmationCount()": "91f78e4c",
              "getResult()": "de292789",
              "getState()": "1865c57d",
              "getTimeLeft()": "c7e284b8",
              "isApprover(address)": "6d218e48",
              "isArbitrator(address)": "9f6bd2a9",
              "required()": "dc8452cd",
              "state()": "c19d93fb",
              "time_created()": "639d7a07"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_disputer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_disputee\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_arbitrators\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ApprovalCount\",\"type\":\"uint256\"}],\"name\":\"Approve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Execution\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ApprovalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ApproveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"arbitrators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputee\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfirmationCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum MultiSigWallet.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprover\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isArbitrator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum MultiSigWallet.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time_created\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Cawin Chan - <cawin.chan@gmail.com>  \",\"kind\":\"dev\",\"methods\":{\"ApproveDispute()\":{\"details\":\"Allows an arbitrator to approve the dispute within a day\"},\"getBalance()\":{\"details\":\"Get time left before dispute expires in mins\"},\"getResult()\":{\"details\":\"Allows an arbitrator to approve the dispute within a day\"},\"getTimeLeft()\":{\"details\":\"Get time left before dispute expires in mins\"}},\"title\":\"Multisignature wallet - Allows multiple parties to agree on transactions before execution.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiSigContract.sol\":\"MultiSigWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/MultiSigContract.sol\":{\"keccak256\":\"0xd2811cdb6869f70c7d8151b9dfac681b3c17b0df29961ab3642e8b018be7d902\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://700193cad90a2e1c9f7553ee2c11fc34eeb1c8d56508a5843032784fbe8a5684\",\"dweb:/ipfs/Qmdd27dsUTjxTgojSpxPD3DoQAC7qhMNtZ3fYTvaY48A5L\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/MultiSigContract.sol": {
        "ast": {
          "absolutePath": "contracts/MultiSigContract.sol",
          "exportedSymbols": {
            "MultiSigWallet": [
              430
            ]
          },
          "id": 431,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".13"
              ],
              "nodeType": "PragmaDirective",
              "src": "53:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "MultiSigWallet",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "79:152:0",
                "text": "@title Multisignature wallet - Allows multiple parties to agree on transactions before execution.\n @author Cawin Chan - <cawin.chan@gmail.com>  "
              },
              "fullyImplemented": true,
              "id": 430,
              "linearizedBaseContracts": [
                430
              ],
              "name": "MultiSigWallet",
              "nameLocation": "330:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "77b92c0722e5bbe8d1413b7fbec6093bc4dc966a65832498dc8c2c67d9a937cc",
                  "id": 6,
                  "name": "Approve",
                  "nameLocation": "387:7:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ApprovalCount",
                        "nameLocation": "403:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 6,
                        "src": "395:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "395:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "394:23:0"
                  },
                  "src": "381:37:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed75",
                  "id": 10,
                  "name": "Execution",
                  "nameLocation": "429:9:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "time",
                        "nameLocation": "447:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "439:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "439:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "438:14:0"
                  },
                  "src": "423:30:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
                  "id": 16,
                  "name": "Deposit",
                  "nameLocation": "464:7:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 12,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "480:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "472:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "472:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 14,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "493:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "488:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "488:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "471:28:0"
                  },
                  "src": "458:42:0"
                },
                {
                  "constant": false,
                  "functionSelector": "9f6bd2a9",
                  "id": 20,
                  "mutability": "mutable",
                  "name": "isArbitrator",
                  "nameLocation": "570:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "537:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 19,
                    "keyType": {
                      "id": 17,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "546:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "537:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 18,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "557:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6d218e48",
                  "id": 24,
                  "mutability": "mutable",
                  "name": "isApprover",
                  "nameLocation": "621:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "588:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 23,
                    "keyType": {
                      "id": 21,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "597:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "588:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 22,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "608:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a6430cc0",
                  "id": 27,
                  "mutability": "mutable",
                  "name": "arbitrators",
                  "nameLocation": "654:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "637:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 25,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "637:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 26,
                    "nodeType": "ArrayTypeName",
                    "src": "637:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6ac56103",
                  "id": 29,
                  "mutability": "mutable",
                  "name": "disputer",
                  "nameLocation": "694:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "671:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fc2ac367",
                  "id": 31,
                  "mutability": "mutable",
                  "name": "disputee",
                  "nameLocation": "731:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "708:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "dc8452cd",
                  "id": 33,
                  "mutability": "mutable",
                  "name": "required",
                  "nameLocation": "760:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "745:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6eec3515",
                  "id": 35,
                  "mutability": "mutable",
                  "name": "ApprovalCount",
                  "nameLocation": "789:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "774:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "639d7a07",
                  "id": 37,
                  "mutability": "mutable",
                  "name": "time_created",
                  "nameLocation": "823:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "808:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "MultiSigWallet.State",
                  "id": 42,
                  "members": [
                    {
                      "id": 38,
                      "name": "await_deposit",
                      "nameLocation": "1190:13:0",
                      "nodeType": "EnumValue",
                      "src": "1190:13:0"
                    },
                    {
                      "id": 39,
                      "name": "await_approval",
                      "nameLocation": "1205:14:0",
                      "nodeType": "EnumValue",
                      "src": "1205:14:0"
                    },
                    {
                      "id": 40,
                      "name": "dispute_succesful",
                      "nameLocation": "1221:17:0",
                      "nodeType": "EnumValue",
                      "src": "1221:17:0"
                    },
                    {
                      "id": 41,
                      "name": "dispute_failed",
                      "nameLocation": "1240:14:0",
                      "nodeType": "EnumValue",
                      "src": "1240:14:0"
                    }
                  ],
                  "name": "State",
                  "nameLocation": "847:5:0",
                  "nodeType": "EnumDefinition",
                  "src": "842:418:0"
                },
                {
                  "constant": false,
                  "functionSelector": "c19d93fb",
                  "id": 45,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "1327:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "1314:18:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$42",
                    "typeString": "enum MultiSigWallet.State"
                  },
                  "typeName": {
                    "id": 44,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42,
                      "src": "1314:5:0"
                    },
                    "referencedDeclaration": 42,
                    "src": "1314:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$42",
                      "typeString": "enum MultiSigWallet.State"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1477:71:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$42",
                                "typeString": "enum MultiSigWallet.State"
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 51,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "1506:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$42",
                                  "typeString": "enum MultiSigWallet.State"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 52,
                                "name": "expected_state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "1515:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$42",
                                  "typeString": "enum MultiSigWallet.State"
                                }
                              },
                              "src": "1506:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 50,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1498:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1498:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1498:32:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1540:1:0"
                      }
                    ]
                  },
                  "id": 58,
                  "name": "instate",
                  "nameLocation": "1448:7:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 49,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 48,
                        "mutability": "mutable",
                        "name": "expected_state",
                        "nameLocation": "1462:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "1456:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$42",
                          "typeString": "enum MultiSigWallet.State"
                        },
                        "typeName": {
                          "id": 47,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 46,
                            "name": "State",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 42,
                            "src": "1456:5:0"
                          },
                          "referencedDeclaration": 42,
                          "src": "1456:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$42",
                            "typeString": "enum MultiSigWallet.State"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1455:22:0"
                  },
                  "src": "1439:109:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 69,
                    "nodeType": "Block",
                    "src": "1601:61:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 63,
                                "name": "isArbitrator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "1619:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 65,
                              "indexExpression": {
                                "id": 64,
                                "name": "arbitrator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "1632:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1619:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 62,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1611:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1611:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67,
                        "nodeType": "ExpressionStatement",
                        "src": "1611:33:0"
                      },
                      {
                        "id": 68,
                        "nodeType": "PlaceholderStatement",
                        "src": "1654:1:0"
                      }
                    ]
                  },
                  "id": 70,
                  "name": "arbitratorExists",
                  "nameLocation": "1564:16:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 61,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 60,
                        "mutability": "mutable",
                        "name": "arbitrator",
                        "nameLocation": "1589:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "1581:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 59,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1580:20:0"
                  },
                  "src": "1555:107:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1711:60:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1729:23:0",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 75,
                                  "name": "isApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "1730:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 77,
                                "indexExpression": {
                                  "id": 76,
                                  "name": "arbitrator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "1741:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1730:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 74,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1721:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1721:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "1721:32:0"
                      },
                      {
                        "id": 81,
                        "nodeType": "PlaceholderStatement",
                        "src": "1763:1:0"
                      }
                    ]
                  },
                  "id": 83,
                  "name": "neverApproved",
                  "nameLocation": "1677:13:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 73,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 72,
                        "mutability": "mutable",
                        "name": "arbitrator",
                        "nameLocation": "1699:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "1691:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1691:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1690:20:0"
                  },
                  "src": "1668:103:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "1798:90:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 96,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 94,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 92,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 89,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 86,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "1818:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 87,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "1818:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "id": 88,
                                                "name": "time_created",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 37,
                                                "src": "1836:12:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "1818:30:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 90,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "1817:32:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3630",
                                          "id": 91,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1851:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_60_by_1",
                                            "typeString": "int_const 60"
                                          },
                                          "value": "60"
                                        },
                                        "src": "1817:36:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "3630",
                                        "id": 93,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1856:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_60_by_1",
                                          "typeString": "int_const 60"
                                        },
                                        "value": "60"
                                      },
                                      "src": "1817:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "3234",
                                      "id": 95,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1861:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_24_by_1",
                                        "typeString": "int_const 24"
                                      },
                                      "value": "24"
                                    },
                                    "src": "1817:46:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 97,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1816:48:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 98,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1868:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1816:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 85,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1808:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "1808:62:0"
                      },
                      {
                        "id": 102,
                        "nodeType": "PlaceholderStatement",
                        "src": "1880:1:0"
                      }
                    ]
                  },
                  "id": 104,
                  "name": "withinADay",
                  "nameLocation": "1786:10:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1796:2:0"
                  },
                  "src": "1777:111:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 124,
                    "nodeType": "Block",
                    "src": "1914:89:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 117,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 115,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 113,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 110,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 107,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "1934:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 108,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "1934:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "id": 109,
                                                "name": "time_created",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 37,
                                                "src": "1952:12:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "1934:30:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 111,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "1933:32:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3630",
                                          "id": 112,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1967:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_60_by_1",
                                            "typeString": "int_const 60"
                                          },
                                          "value": "60"
                                        },
                                        "src": "1933:36:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "3630",
                                        "id": 114,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1972:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_60_by_1",
                                          "typeString": "int_const 60"
                                        },
                                        "value": "60"
                                      },
                                      "src": "1933:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "3234",
                                      "id": 116,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1977:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_24_by_1",
                                        "typeString": "int_const 24"
                                      },
                                      "value": "24"
                                    },
                                    "src": "1933:46:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 118,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1932:48:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1983:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1932:52:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 106,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1924:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1924:61:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 122,
                        "nodeType": "ExpressionStatement",
                        "src": "1924:61:0"
                      },
                      {
                        "id": 123,
                        "nodeType": "PlaceholderStatement",
                        "src": "1995:1:0"
                      }
                    ]
                  },
                  "id": 125,
                  "name": "AfterADay",
                  "nameLocation": "1903:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1912:2:0"
                  },
                  "src": "1894:109:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "2086:7:0",
                    "statements": []
                  },
                  "id": 129,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2067:2:0"
                  },
                  "returnParameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2086:0:0"
                  },
                  "scope": 430,
                  "src": "2059:34:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "2126:7:0",
                    "statements": []
                  },
                  "id": 133,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2106:2:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:0"
                  },
                  "scope": 430,
                  "src": "2099:34:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 212,
                    "nodeType": "Block",
                    "src": "2408:408:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 146,
                                  "name": "_required",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "2423:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 147,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2436:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2423:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 149,
                                    "name": "_arbitrators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 140,
                                    "src": "2453:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2453:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 151,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2476:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2453:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2423:54:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 145,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2415:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2415:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 155,
                        "nodeType": "ExpressionStatement",
                        "src": "2415:63:0"
                      },
                      {
                        "body": {
                          "id": 184,
                          "nodeType": "Block",
                          "src": "2528:102:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 173,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "2546:30:0",
                                    "subExpression": {
                                      "baseExpression": {
                                        "id": 168,
                                        "name": "isArbitrator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20,
                                        "src": "2547:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 172,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 169,
                                          "name": "_arbitrators",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 140,
                                          "src": "2560:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 171,
                                        "indexExpression": {
                                          "id": 170,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 157,
                                          "src": "2573:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2560:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2547:29:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 167,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2538:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2538:39:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 175,
                              "nodeType": "ExpressionStatement",
                              "src": "2538:39:0"
                            },
                            {
                              "expression": {
                                "id": 182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 176,
                                    "name": "isArbitrator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20,
                                    "src": "2587:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 180,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 177,
                                      "name": "_arbitrators",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 140,
                                      "src": "2600:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 179,
                                    "indexExpression": {
                                      "id": 178,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 157,
                                      "src": "2613:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2600:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2587:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 181,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2619:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2587:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 183,
                              "nodeType": "ExpressionStatement",
                              "src": "2587:36:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 160,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "2500:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 161,
                              "name": "_arbitrators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 140,
                              "src": "2502:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2502:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2500:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 185,
                        "initializationExpression": {
                          "assignments": [
                            157
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 157,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2495:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 185,
                              "src": "2490:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 156,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2490:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 159,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2497:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2490:8:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2523:3:0",
                            "subExpression": {
                              "id": 164,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "2523:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 166,
                          "nodeType": "ExpressionStatement",
                          "src": "2523:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "2485:145:0"
                      },
                      {
                        "expression": {
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 186,
                            "name": "disputer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "2636:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 187,
                            "name": "_disputer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "2647:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2636:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "2636:20:0"
                      },
                      {
                        "expression": {
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 190,
                            "name": "disputee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "2662:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 191,
                            "name": "_disputee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2673:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2662:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 193,
                        "nodeType": "ExpressionStatement",
                        "src": "2662:20:0"
                      },
                      {
                        "expression": {
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 194,
                            "name": "arbitrators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "2688:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 195,
                            "name": "_arbitrators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "2702:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "2688:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 197,
                        "nodeType": "ExpressionStatement",
                        "src": "2688:26:0"
                      },
                      {
                        "expression": {
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 198,
                            "name": "required",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2720:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 199,
                            "name": "_required",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "2731:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2720:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 201,
                        "nodeType": "ExpressionStatement",
                        "src": "2720:20:0"
                      },
                      {
                        "expression": {
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 202,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2746:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$42",
                              "typeString": "enum MultiSigWallet.State"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 203,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "2754:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$42_$",
                                "typeString": "type(enum MultiSigWallet.State)"
                              }
                            },
                            "id": 204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "await_deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38,
                            "src": "2754:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$42",
                              "typeString": "enum MultiSigWallet.State"
                            }
                          },
                          "src": "2746:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$42",
                            "typeString": "enum MultiSigWallet.State"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "2746:27:0"
                      },
                      {
                        "expression": {
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 207,
                            "name": "time_created",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "2779:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 208,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2794:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2794:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2779:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 211,
                        "nodeType": "ExpressionStatement",
                        "src": "2779:30:0"
                      }
                    ]
                  },
                  "id": 213,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "_disputer",
                        "nameLocation": "2197:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "2181:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2181:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 137,
                        "mutability": "mutable",
                        "name": "_disputee",
                        "nameLocation": "2271:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "2255:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2255:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "_arbitrators",
                        "nameLocation": "2354:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "2337:29:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2337:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 139,
                          "nodeType": "ArrayTypeName",
                          "src": "2337:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 142,
                        "mutability": "mutable",
                        "name": "_required",
                        "nameLocation": "2390:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "2385:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2385:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2180:220:0"
                  },
                  "returnParameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2408:0:0"
                  },
                  "scope": 430,
                  "src": "2169:647:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 243,
                    "nodeType": "Block",
                    "src": "2918:169:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 220,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2928:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$42",
                              "typeString": "enum MultiSigWallet.State"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 221,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "2936:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$42_$",
                                "typeString": "type(enum MultiSigWallet.State)"
                              }
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "await_approval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "2936:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$42",
                              "typeString": "enum MultiSigWallet.State"
                            }
                          },
                          "src": "2928:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$42",
                            "typeString": "enum MultiSigWallet.State"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "2928:28:0"
                      },
                      {
                        "assignments": [
                          226,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 226,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "2972:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 243,
                            "src": "2967:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 225,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2967:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 237,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3018:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 229,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2989:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                      "typeString": "contract MultiSigWallet"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                      "typeString": "contract MultiSigWallet"
                                    }
                                  ],
                                  "id": 228,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2981:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 227,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2981:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2981:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2981:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 232,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3007:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3007:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2981:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2981:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2966:55:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 239,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "3039:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e642066756e647320746f206d756c7469736967",
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3045:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f9a4049831e7feb4b8733f78255f4f47711fbca27857a0e14685e4f40da1074d",
                                "typeString": "literal_string \"Failed to send funds to multisig\""
                              },
                              "value": "Failed to send funds to multisig"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f9a4049831e7feb4b8733f78255f4f47711fbca27857a0e14685e4f40da1074d",
                                "typeString": "literal_string \"Failed to send funds to multisig\""
                              }
                            ],
                            "id": 238,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3031:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3031:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "3031:49:0"
                      }
                    ]
                  },
                  "functionSelector": "e2c41dbc",
                  "id": 244,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 216,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "2885:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$42_$",
                              "typeString": "type(enum MultiSigWallet.State)"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "await_deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "2885:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$42",
                            "typeString": "enum MultiSigWallet.State"
                          }
                        }
                      ],
                      "id": 218,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 215,
                        "name": "instate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2877:7:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2877:28:0"
                    }
                  ],
                  "name": "depositFunds",
                  "nameLocation": "2835:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2847:2:0"
                  },
                  "returnParameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2918:0:0"
                  },
                  "scope": 430,
                  "src": "2826:261:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 310,
                    "nodeType": "Block",
                    "src": "3338:455:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 262,
                              "name": "isApprover",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "3348:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 265,
                            "indexExpression": {
                              "expression": {
                                "id": 263,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3359:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3359:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3348:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3373:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3348:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 268,
                        "nodeType": "ExpressionStatement",
                        "src": "3348:29:0"
                      },
                      {
                        "expression": {
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 269,
                            "name": "ApprovalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "3387:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3404:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3387:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "3387:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 274,
                              "name": "ApprovalCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "3428:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 273,
                            "name": "Approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "3420:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3420:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 276,
                        "nodeType": "EmitStatement",
                        "src": "3415:27:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 277,
                            "name": "ApprovalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "3456:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 278,
                            "name": "required",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "3473:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3456:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 309,
                        "nodeType": "IfStatement",
                        "src": "3452:335:0",
                        "trueBody": {
                          "id": 308,
                          "nodeType": "Block",
                          "src": "3482:305:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 280,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "3561:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$42",
                                    "typeString": "enum MultiSigWallet.State"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 281,
                                    "name": "State",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42,
                                    "src": "3569:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_State_$42_$",
                                      "typeString": "type(enum MultiSigWallet.State)"
                                    }
                                  },
                                  "id": 282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "dispute_succesful",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40,
                                  "src": "3569:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$42",
                                    "typeString": "enum MultiSigWallet.State"
                                  }
                                },
                                "src": "3561:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$42",
                                  "typeString": "enum MultiSigWallet.State"
                                }
                              },
                              "id": 284,
                              "nodeType": "ExpressionStatement",
                              "src": "3561:31:0"
                            },
                            {
                              "assignments": [
                                286,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 286,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "3612:4:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 308,
                                  "src": "3607:9:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 285,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3607:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 297,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 295,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3665:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 287,
                                      "name": "disputer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29,
                                      "src": "3621:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 288,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "3621:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 291,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "3650:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                              "typeString": "contract MultiSigWallet"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                              "typeString": "contract MultiSigWallet"
                                            }
                                          ],
                                          "id": 290,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3642:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 289,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3642:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 292,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3642:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 293,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balance",
                                      "nodeType": "MemberAccess",
                                      "src": "3642:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "3621:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3621:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3606:62:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 299,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 286,
                                    "src": "3690:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e642066756e647320746f206469737075746572",
                                    "id": 300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3696:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_9f0adef860f89c80da5e66142276c667d6a13060042fed0fb512dab5f7f3c880",
                                      "typeString": "literal_string \"Failed to send funds to disputer\""
                                    },
                                    "value": "Failed to send funds to disputer"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_9f0adef860f89c80da5e66142276c667d6a13060042fed0fb512dab5f7f3c880",
                                      "typeString": "literal_string \"Failed to send funds to disputer\""
                                    }
                                  ],
                                  "id": 298,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3682:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3682:49:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 302,
                              "nodeType": "ExpressionStatement",
                              "src": "3682:49:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 304,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "3760:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "3760:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 303,
                                  "name": "Execution",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "3750:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3750:26:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 307,
                              "nodeType": "EmitStatement",
                              "src": "3745:31:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 245,
                    "nodeType": "StructuredDocumentation",
                    "src": "3093:65:0",
                    "text": "@dev Allows an arbitrator to approve the dispute within a day"
                  },
                  "functionSelector": "43efa9ec",
                  "id": 311,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 248,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3229:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3229:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 250,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 247,
                        "name": "arbitratorExists",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 70,
                        "src": "3212:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3212:28:0"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3263:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3263:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 254,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 251,
                        "name": "neverApproved",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 83,
                        "src": "3249:13:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3249:25:0"
                    },
                    {
                      "arguments": [],
                      "id": 256,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 255,
                        "name": "withinADay",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "3283:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3283:12:0"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 258,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "3312:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$42_$",
                              "typeString": "type(enum MultiSigWallet.State)"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "await_approval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "3312:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$42",
                            "typeString": "enum MultiSigWallet.State"
                          }
                        }
                      ],
                      "id": 260,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 257,
                        "name": "instate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3304:7:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3304:29:0"
                    }
                  ],
                  "name": "ApproveDispute",
                  "nameLocation": "3172:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3186:2:0"
                  },
                  "returnParameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3338:0:0"
                  },
                  "scope": 430,
                  "src": "3163:630:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 373,
                    "nodeType": "Block",
                    "src": "3929:471:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 317,
                            "name": "ApprovalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "3943:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 318,
                            "name": "required",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "3959:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3943:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 344,
                        "nodeType": "IfStatement",
                        "src": "3939:221:0",
                        "trueBody": {
                          "id": 343,
                          "nodeType": "Block",
                          "src": "3968:192:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 320,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "3982:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$42",
                                    "typeString": "enum MultiSigWallet.State"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 321,
                                    "name": "State",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42,
                                    "src": "3990:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_State_$42_$",
                                      "typeString": "type(enum MultiSigWallet.State)"
                                    }
                                  },
                                  "id": 322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "dispute_failed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 41,
                                  "src": "3990:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$42",
                                    "typeString": "enum MultiSigWallet.State"
                                  }
                                },
                                "src": "3982:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$42",
                                  "typeString": "enum MultiSigWallet.State"
                                }
                              },
                              "id": 324,
                              "nodeType": "ExpressionStatement",
                              "src": "3982:28:0"
                            },
                            {
                              "assignments": [
                                326,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 326,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "4030:4:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 343,
                                  "src": "4025:9:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 325,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4025:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 337,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4083:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 327,
                                      "name": "disputee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31,
                                      "src": "4039:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 328,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "4039:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 331,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "4068:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                              "typeString": "contract MultiSigWallet"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                              "typeString": "contract MultiSigWallet"
                                            }
                                          ],
                                          "id": 330,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4060:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 329,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4060:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 332,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4060:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 333,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balance",
                                      "nodeType": "MemberAccess",
                                      "src": "4060:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "4039:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4039:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4024:62:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 339,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 326,
                                    "src": "4108:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e642066756e647320746f206469737075746565",
                                    "id": 340,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4114:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ddddf8a34fb1efb61f3370d7bea5761ea024a49988f115833451546a00257398",
                                      "typeString": "literal_string \"Failed to send funds to disputee\""
                                    },
                                    "value": "Failed to send funds to disputee"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ddddf8a34fb1efb61f3370d7bea5761ea024a49988f115833451546a00257398",
                                      "typeString": "literal_string \"Failed to send funds to disputee\""
                                    }
                                  ],
                                  "id": 338,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4100:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4100:49:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 342,
                              "nodeType": "ExpressionStatement",
                              "src": "4100:49:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 345,
                            "name": "ApprovalCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "4173:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 346,
                            "name": "required",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "4190:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4173:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 372,
                        "nodeType": "IfStatement",
                        "src": "4169:225:0",
                        "trueBody": {
                          "id": 371,
                          "nodeType": "Block",
                          "src": "4199:195:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 348,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "4213:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$42",
                                    "typeString": "enum MultiSigWallet.State"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 349,
                                    "name": "State",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42,
                                    "src": "4221:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_State_$42_$",
                                      "typeString": "type(enum MultiSigWallet.State)"
                                    }
                                  },
                                  "id": 350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "dispute_succesful",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40,
                                  "src": "4221:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$42",
                                    "typeString": "enum MultiSigWallet.State"
                                  }
                                },
                                "src": "4213:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$42",
                                  "typeString": "enum MultiSigWallet.State"
                                }
                              },
                              "id": 352,
                              "nodeType": "ExpressionStatement",
                              "src": "4213:31:0"
                            },
                            {
                              "assignments": [
                                354,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 354,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "4264:4:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 371,
                                  "src": "4259:9:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 353,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4259:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 365,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4317:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 355,
                                      "name": "disputer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29,
                                      "src": "4273:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 356,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "4273:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 359,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "4302:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                              "typeString": "contract MultiSigWallet"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                              "typeString": "contract MultiSigWallet"
                                            }
                                          ],
                                          "id": 358,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4294:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 357,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4294:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 360,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4294:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 361,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balance",
                                      "nodeType": "MemberAccess",
                                      "src": "4294:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "4273:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4273:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4258:62:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 367,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 354,
                                    "src": "4342:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e642066756e647320746f206469737075746572",
                                    "id": 368,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4348:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_9f0adef860f89c80da5e66142276c667d6a13060042fed0fb512dab5f7f3c880",
                                      "typeString": "literal_string \"Failed to send funds to disputer\""
                                    },
                                    "value": "Failed to send funds to disputer"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_9f0adef860f89c80da5e66142276c667d6a13060042fed0fb512dab5f7f3c880",
                                      "typeString": "literal_string \"Failed to send funds to disputer\""
                                    }
                                  ],
                                  "id": 366,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4334:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4334:49:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 370,
                              "nodeType": "ExpressionStatement",
                              "src": "4334:49:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 312,
                    "nodeType": "StructuredDocumentation",
                    "src": "3799:65:0",
                    "text": "@dev Allows an arbitrator to approve the dispute within a day"
                  },
                  "functionSelector": "de292789",
                  "id": 374,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 315,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 314,
                        "name": "AfterADay",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 125,
                        "src": "3913:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3913:11:0"
                    }
                  ],
                  "name": "getResult",
                  "nameLocation": "3878:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3887:2:0"
                  },
                  "returnParameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3929:0:0"
                  },
                  "scope": 430,
                  "src": "3869:531:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 381,
                    "nodeType": "Block",
                    "src": "4465:37:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 379,
                          "name": "ApprovalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "4482:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 378,
                        "id": 380,
                        "nodeType": "Return",
                        "src": "4475:20:0"
                      }
                    ]
                  },
                  "functionSelector": "91f78e4c",
                  "id": 382,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConfirmationCount",
                  "nameLocation": "4416:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4436:2:0"
                  },
                  "returnParameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "4460:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4460:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4459:6:0"
                  },
                  "scope": 430,
                  "src": "4407:95:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 404,
                    "nodeType": "Block",
                    "src": "4658:74:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1440_by_1",
                                  "typeString": "int_const 1440"
                                },
                                "id": 392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3234",
                                  "id": 390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4677:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_24_by_1",
                                    "typeString": "int_const 24"
                                  },
                                  "value": "24"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3630",
                                  "id": 391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4680:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "src": "4677:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1440_by_1",
                                  "typeString": "int_const 1440"
                                }
                              }
                            ],
                            "id": 393,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4676:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1440_by_1",
                              "typeString": "int_const 1440"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 397,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 394,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "4688:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 395,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "4688:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 396,
                                        "name": "time_created",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37,
                                        "src": "4706:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4688:30:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 398,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4687:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "3630",
                                  "id": 399,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4722:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "src": "4687:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 401,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4686:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4676:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 389,
                        "id": 403,
                        "nodeType": "Return",
                        "src": "4669:56:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 383,
                    "nodeType": "StructuredDocumentation",
                    "src": "4511:53:0",
                    "text": "@dev Get time left before dispute expires in mins"
                  },
                  "functionSelector": "c7e284b8",
                  "id": 405,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 386,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 385,
                        "name": "withinADay",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "4622:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4622:12:0"
                    }
                  ],
                  "name": "getTimeLeft",
                  "nameLocation": "4578:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 384,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4589:2:0"
                  },
                  "returnParameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "4653:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4653:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4652:6:0"
                  },
                  "scope": 430,
                  "src": "4569:163:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 419,
                    "nodeType": "Block",
                    "src": "4884:58:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 415,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4922:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                  "typeString": "contract MultiSigWallet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MultiSigWallet_$430",
                                  "typeString": "contract MultiSigWallet"
                                }
                              ],
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4914:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 413,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4914:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4914:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4914:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 412,
                        "id": 418,
                        "nodeType": "Return",
                        "src": "4907:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 406,
                    "nodeType": "StructuredDocumentation",
                    "src": "4738:53:0",
                    "text": "@dev Get time left before dispute expires in mins"
                  },
                  "functionSelector": "12065fe0",
                  "id": 420,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 409,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 408,
                        "name": "withinADay",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "4848:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4848:12:0"
                    }
                  ],
                  "name": "getBalance",
                  "nameLocation": "4805:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4815:2:0"
                  },
                  "returnParameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 411,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "4879:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 410,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4879:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4878:6:0"
                  },
                  "scope": 430,
                  "src": "4796:146:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 428,
                    "nodeType": "Block",
                    "src": "4995:29:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 426,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "5012:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$42",
                            "typeString": "enum MultiSigWallet.State"
                          }
                        },
                        "functionReturnParameters": 425,
                        "id": 427,
                        "nodeType": "Return",
                        "src": "5005:12:0"
                      }
                    ]
                  },
                  "functionSelector": "1865c57d",
                  "id": 429,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getState",
                  "nameLocation": "4957:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 421,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4965:2:0"
                  },
                  "returnParameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "4989:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$42",
                          "typeString": "enum MultiSigWallet.State"
                        },
                        "typeName": {
                          "id": 423,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 422,
                            "name": "State",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 42,
                            "src": "4989:5:0"
                          },
                          "referencedDeclaration": 42,
                          "src": "4989:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$42",
                            "typeString": "enum MultiSigWallet.State"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4988:7:0"
                  },
                  "scope": 430,
                  "src": "4948:76:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 431,
              "src": "321:4705:0",
              "usedErrors": []
            }
          ],
          "src": "53:4974:0"
        },
        "id": 0
      }
    }
  }
}
